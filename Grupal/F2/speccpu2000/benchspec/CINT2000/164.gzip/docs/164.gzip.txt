SPEC CPU2000 Benchmark Description File
 
Benchmark Name: 164.gzip
 
Benchmark Author: Jean-Loup Gailly <gzip@gnu.org>
 
Benchmark Program General Category: compression
 
Benchmark Description:

  gzip (GNU zip) is a popular data compression program written by Jean-Loup
  Gailly <gzip@gnu.org> for the GNU project.  `gzip' uses Lempel-Ziv
  coding (LZ77) as its compression algorithm.

  SPEC's version of gzip performs no file I/O other than reading the input.
  All compression and decompression happens entirely in memory.  This is to
  help isolate the work done to just the CPU and the memory subsystem.

Input Description:

  164.gzip's reference workload has five components: a large TIFF image, a
  webserver log, a program binary, random data, and a source tar file.  With
  the exception of the random data, these components were selected as a
  reasonably representative set of things that gzip might be most often used
  on.  The random data is present to test gzip's worst-case behavior.
 
  Each input set is compressed and decompressed at several different
  blocking factors ("compression levels"), with the end result of the
  process being compared to the original data after each step.

Output Description:

  The output files provide a brief outline of what the benchmark is doing as
  it runs.  Output sizes for each compression and decompression are printed
  to facilitate validation, and the results of decompression are compared
  with the input data to ensure that they match.
 
Programming Language: ANSI C
 
Known portability issues: None
  The header file "io.c" is not automatically included.  If your compiler
  needs this header file, define NEED_IO_H.
 
References:

 gzip's page at the FSF:           http://www.gnu.org/software/gzip/gzip.html
 The online manual is available at http://www.gnu.org/manual/gzip/index.html 
 The format of the .gz files generated by gzip is described in RFCs (Request
 For Comments) 1951 and 1952.
